#------------------------------------------------------------------------
# Regression model generated by GeneXproTools 5.0
# Training Records:  400
# Validation Records:   85
# Fitness Function:  RMSE
# Training Fitness:  993.259325103883
# Training R-square: 0.98266822977419
# Validation Fitness:   994.105050798199
# Validation R-square:  0.982702524635621
#------------------------------------------------------------------------

from math import *

def gepModel(d):

    G1C7 = -9.99291218156183
    G1C2 = 8.35997651006847
    G2C6 = 5.98042925753881
    G2C0 = 4.95161699665044

    y = 0.0

    y = (1.0/(gep3Rt(pow((pow((d[1]*G1C2),4.0)-pow(d[0],5.0)-(G1C7*G1C7*d[1]*d[2])),(1.0/4.0)))))
    y = y * gep3Rt(sqrt((1.0/((sqrt((G2C0*d[3]*d[4]))+sqrt(G2C6)+(d[4]*d[0]*d[2]))))))
    y = y * pow(gep3Rt(gep3Rt((gep3Rt((1.0/(d[4])))*(1.0/(gep5Rt(d[0])))))),5.0)

    return y
    

def gep3Rt(x):
    if (x < 0.0):
        return -pow(-x,(1.0/3.0))
    else:
        return pow(x,(1.0/3.0))

def gep5Rt(x):
    if (x < 0.0):
        return -pow(-x,(1.0/5.0))
    else:
        return pow(x,(1.0/5.0))
